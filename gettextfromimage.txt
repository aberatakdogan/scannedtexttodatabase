private void getTextFromImage(Bitmap bitmap) {
        TextRecognizer recognizer = new TextRecognizer.Builder(this).build();


        if (!recognizer.isOperational()) {
            Toast.makeText(MainActivity.this, "Error Occurred!!", Toast.LENGTH_SHORT).show();

        } else {
            Frame frame = new Frame.Builder().setBitmap(bitmap).build();
            SparseArray<TextBlock> textBlockSparseArray = recognizer.detect(frame);
            StringBuilder stringBuilder = new StringBuilder();
            for (int i = 0; i < textBlockSparseArray.size(); i++) {
                textBlock = textBlockSparseArray.valueAt(i);
                stringBuilder.append(textBlock.getValue());
                stringBuilder.append("\n");
                //System.out.println("yazı:"+textBlock.getValue());
            }
            textView_data.setText(stringBuilder.toString());

            FirebaseUser firebaseUser = FirebaseAuth.getInstance().getCurrentUser();

            String uid = textBlock.getValue();
            System.out.println("okutulan yazı 2: "+uid);
            ReadWriteUserDetails writeUserDetails = new ReadWriteUserDetails(uid);
            DatabaseReference referenceProfile = FirebaseDatabase.getInstance().getReference("Cropped all texts");
            if (firebaseUser != null) {
                referenceProfile = referenceProfile.child(firebaseUser.getUid());
            }
            System.out.println("hata verdi 2");

            referenceProfile.child(firebaseUser.getUid()).setValue(writeUserDetails).addOnCompleteListener(new OnCompleteListener<Void>() {
                @Override
                public void onComplete(@NonNull Task<Void> task) {
                    Toast.makeText(MainActivity.this, "Data is written on the database successfully", Toast.LENGTH_LONG).show();
                }
            });


            button_capture.setText("Retake");
            button_copy.setVisibility(View.VISIBLE);

        }

    }
